---
- hosts: all # ubuntu-devbox
  sudo: true
#  user: vagrant #( use default) 
  vars:
    host_name: ubuntu-vagrant-devbox
    user: vagrant
  tasks:
    #- user: name={{ user }} shell=/bin/bash groups=admins,developers append=yes
    - name: add node.js repo to /etc/apt-/sources.list/
      apt_repository: repo=ppa:chris-lea/node.js
    - name: add ubuntugis repo to /etc/apt/sources.list/
      apt_repository: repo=ppa:ubuntugis/ubuntugis-unstable
    - name: update apt
      apt: update_cache=yes
    - apt: upgrade=safe
    - name: install image libraries
      apt: name={{ item }} state=present
      with_items:
        - libjpeg-dev
        #- libjpeg62-dev 
        - zlib1g-dev
        - libfreetype6-dev
    - name: install required python
      apt: name={{ item }} state=present
      with_items:
        - python-pip 
        - python-dev 
        - build-essential
        - python-setuptools
        - openssh-server
        - python-imaging
        - ipython
        - python-docutils
        - python-software-properties
        - python-mapscript
        - python-crypto
        - bash-completion
    - name: install avahi, exim, git, subversion, nginx, nodejs, vim
      apt: name={{ item }} state=present
      with_items:
        - avahi-daemon
        - exim4
        - git-core
        - git-svn
        - subversion
        - nginx
        - vim
        - nodejs
#        - npm
    - name: install postgres postgis
      apt: name={{ item }} state=present
      with_items:
        - postgresql-client-common
        - postgresql
        - postgis 
        - python-psycopg2
        - python-gdal
        - libproj-dev
        - gdal-bin
        - libpq-dev 
    #- name: init postgres database
    #  command: service postgresql initdb
    #  #        creates=/var/lib/pgsql/data/postgresql.conf
    # psql: https://github.com/mattwillsher/ansible-product-playbooks/blob/master/postgresql/install_server.yml
    - name: start postgres and enable at boot
      service: name=postgresql
               enabled=yes
               state=started      
    - name: install unattended upgrades package
      apt: name=unattended-upgrades
      notify:
        - dpkg reconfigue unattended
    - pip: name=setuptools
    - pip: name=pip
    - pip: name=Pillow
    - pip: name=fabric
    - pip: name=gunicorn
    #- pip: name='git+https://<username>@bitbucket.org/trapeze/boulanger.git'
    - name: create locale, ensure exists
      locale_gen: name=en_CA.UTF-8 state=present
    - command: update-locale LANG=en_CA.UTF-8 # usr/sbin
    - name: update hostname
      hostname: name={{ host_name }}
    - name: allow host forwarding
      template: 
        src=templates/ssh_config.j2
        dest=/home/{{ user }}/.ssh/config
    - name: set timezone variables
      copy: content='America/Toronto'
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
      notify:
        - update timezone
    - name: update bashrc PYTHONPATH
      lineinfile:
        dest=/home/{{ user }}/.bashrc
        line="export PYTHONPATH=.:..:../lib"
    # Cannot find file, not needed here anyway
    #- name: source bashrc
    #  command: source /home/{{ user }}/.bashrc
    # Default config is fine
    #- name: Exim4 Configuration
    #  template: src=update-exim4.conf.j2 dest=/etc/exim4/update-exim4.conf.conf
    #  tags: [exim]
    #  notify: update exim4.conf
  handlers:
    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
    - name: dpkg reconfigure
      command: >
        dpkg-reconfigure unattended
        --frontend noninteractive
        -plow unattended-upgrades
    - name: restart postgresql
      service: name=postgresql state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: update exim4.conf
      shell: /usr/sbin/update-exim4.conf
# How to install grunt, grunt-cli, grunt-init locally ?
